Things i don't like about it (will change till version 2.0):


* Some crazy if's - This will need a total rewrite from the plugin;
* Mask types should have in some way, different options for each of them, i mean, they should be threated separately, each of theyres event. It's being done right now... but i feel that it can be even better;
* Try not to polute the native objects with crazy and unusefull methods;
* Make a cool and correct unmaskedVal function;
* Work correctly with float and integer numbers, i mean like... if 90 is the value of the input it will mask to 90.00 not 0.90;
* New mask type that works like this:
	mask='9-9' and maxlength=5
	'22' -> '2-2'
	'222' -> '22-2'
	'2222' -> '222-2'
	Till it gets to 5.
* RegexMask should be included too, it is still here at the mootools version, but with the paste bug, that will be easily fixed with the maxLength option, that will not be optional (can't force it but it will break paste if not present);
* Try to add a placeholder option, not that necessary but it would be nice; IT IS STILL THERE!
* Change the way signed masks work! That's so not pretty!;
* Watch for a better fix on maxLength (try to avoid that maxLength == -1).

IDEAS FOR 2.0:

* Set defaultValue when the mask is applyed to fix the reset buton of the form; BEING DONE
* Option that will set the size attribute of the input based on the mask;
* Add a callback to rules so that it can get uppercased or lowercased after inputting the char, this will allow a char being dependent of a preceding char (like on hours you dont want the user to input chars bigger than 3 if the first is 2) 
* As seen on the benchmarks i did, i should consider using a string of characters instead of a regular expression;
* Option to force the completition of the value of the mask.



Changelog:

<h3>Changelog</h3>
v1.1
<ul>
	<li>Mask type 'infinite' is now called 'repeat' (using 'infinite' still works but it is deprecated). It now allows a maxLenght value to be set. MaxLength can be setted by the maxLength attribute or the maxLength option;</li>
	<li>You can easily set an auto-tab option that will focus the next form element when the masked input is totaly filled. It is true by default but you can put a jQuery selector string to match the next element you want to be focused.</li>
	<li>Deprecated 'unmaskVal' function. This function is too buggy... works for most cases but not all. The best way to unmask a value is by doing it yourself;</li>
	<li>'phone-us' mask is now '(999) 999-9999';</li>
	<li>Correctly fires the onChange event on reverse masked inputs.</li>
</ul>
v1.0.4
<ul>
	<li>New mask type 'infinite', it allows infinite values at masks. See demos for a better understanding;</li>
	<li>Added new function 'unmaskVal' that returns the input value without the mask. See demos for a better understanding;</li>
	<li>Removed a serious bug at IE that was fixing the caret at the end of the input;</li>
</ul>
V1.0.3
<ul>
	<li>Callback functions now receive the char number as it second parameter, so it is possible to detect exactly which key has been pressed;</li>
	<li>added the signed masks. It only works with the reverse mask. See demos for more details;</li>
	<li>iPhone support improved. iPhone now works 100% better than the 1.0.2 version. I'ts logic have been changed, and now it's working with full features. :P</li>
</ul>
v1.0.2
<ul>
	<li>added input callbacks: onInvalid, onValid and onOverflow;</li>
	<li>added support for default values;</li>
	<li>can now be used like $().setMask({});</li>
	<li>added the function $.mask.string(string,mask) that will mask a string (see demos);</li>
	<li>now the value of the input is masked at the time the mask is applyed to it.</li>
</ul>
v1.0.1
<ul>
	<li>added support for iphone;</li>
	<li>removed a bug where a fixed char would be replaced by an inputed one.</li>
</ul>
v1.0
<ul>
	<li>initial release.</li>
</ul>
